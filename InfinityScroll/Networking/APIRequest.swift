//
//  APIRequest.swift
//  InfinityScroll
//
//  Created by –û–ª–µ–≥ on 04.07.2021.
//

import Foundation

final class APIRequest {
    /// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
    /// –¢–∞–π–º–∞—É—Ç
    private let timeout: TimeInterval = 30.0
    
    /// –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤
    private let headers: [String: String] = APIHeader().requestHeaders
    
    
    /// –°–¥–µ–ª–∞—Ç—å –∑–∞–ø—Ä–æ—Å
    /// - Parameters:
    ///   - type: —Ç–∏–ø –∑–∞–ø—Ä–æ—Å–∞
    ///   - url: —Å—Å—ã–ª–∫–∞, –ø–æ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω –∑–∞–ø—Ä–æ—Å
    ///   - params: –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
    ///   - success: –æ–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
    ///   - failure: –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏
    func makeRequest(type: APIRequestType, url: URL, params: [String: Any]?, success: @escaping (Data) -> Void, failure: @escaping (Error) -> Void) {
        /// –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω—É–∂–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –µ–≥–æ —Ç–∏–ø–∞
        switch type {
        case .GET:
            self.GETRequest(url: url, params: params, success: success, failure: failure)
        case .POST:
            self.POSTRequest(url: url, params: params, success: success, failure: failure)
        }
    }
    
    
    /// Get –∑–∞–ø—Ä–æ—Å
    /// - Parameters:
    ///   - url: URL
    ///   - params: [String: Any]?
    ///   - success: (Data) -> Void
    ///   - failure: (Error) -> Void
    private func GETRequest(url: URL, params: [String: Any]?, success: @escaping (Data) -> Void, failure: @escaping (Error) -> Void) {
        let configuration = URLSessionConfiguration.default
        /// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–∞–π–º–∞—É—Ç–∞
        configuration.timeoutIntervalForRequest = self.timeout
        /// –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏ —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
        let session = URLSession(configuration: configuration)
        /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è URLComponents
        var urlComponents = URLComponents(string: url.absoluteString)
        
        /// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫ —Å—Å—ã–ª–∫–µ query –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
        if let params = params {
            params.forEach { (key, value) in
                /// –ï—Å–ª–∏ query –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –Ω–µ—Ç, —Ç–æ–≥–¥–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤, –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤ –Ω–µ–≥–æ
                if urlComponents?.queryItems?.isEmpty ?? true {
                    urlComponents?.queryItems = []
                }
                /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è query –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
                let queryItem = URLQueryItem(name: key, value: String(describing: value))
                urlComponents?.queryItems?.append(queryItem)
            }
        }
        /// –ü–æ–ª—É—á–∞–µ–º –≥–æ—Ç–æ–≤—É—é —Å—Å—ã–ª–∫—É —Å query –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        guard let url = urlComponents?.url else { return }
        
        /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è URLRequest
        var urlRequest = URLRequest(url: url)
        
        /// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∫ –∑–∞–ø—Ä–æ—Å—É
        self.headers.forEach { (key, value) in
            urlRequest.addValue(value, forHTTPHeaderField: key)
        }
        
        /// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
        print("üåéüåéüåé GET Request: " + url.absoluteString)
        print("Headers: ")
        print(urlRequest.allHTTPHeaderFields ?? "–í –∑–∞–ø—Ä–æ—Å–µ –Ω–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤")
        
        /// –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞
        session.dataTask(with: url) { (data, response, error) in
            if let data = data {
                /// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
                do {
                    let json = try JSONSerialization.jsonObject(with: data, options: [])
                    /// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
                    print("‚úÖ‚úÖ‚úÖ Response:")
                    print(json)
                    print("‚úÖ‚úÖ‚úÖ")
                    /// –ü–µ—Ä–µ–¥–∞—á–∞ –ø–æ–ª—É—á–µ–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–∞–ª—å—à–µ
                    success(data)
                } catch {
                    /// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏
                    print("üõëüõëüõë Error:" + error.localizedDescription)
                    /// –ü–µ—Ä–µ–¥–∞—á–∞ –ø–æ–ª—É—á–µ–Ω–æ–π –æ—à–∏–±–∫–∏ –¥–∞–ª—å—à–µ
                    failure(error)
                }
            } else if let error = error {
                /// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏
                print("üõëüõëüõë Error:" + error.localizedDescription)
                /// –ü–µ—Ä–µ–¥–∞—á–∞ –ø–æ–ª—É—á–µ–Ω–æ–π –æ—à–∏–±–∫–∏ –¥–∞–ª—å—à–µ
                failure(error)
            }
        }.resume()
    }
    
    
    /// Post –∑–∞–ø—Ä–æ—Å
    /// - Parameters:
    ///   - url: URL
    ///   - params: [String: Any]?
    ///   - success: (Data) -> Void
    ///   - failure: (Error) -> Void
    private func POSTRequest(url: URL, params: [String: Any]?, success: @escaping (Data) -> Void, failure: @escaping (Error) -> Void) {
        /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏
        let session = URLSession.shared
        /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è URLRequest
        var urlRequest = URLRequest(url: url)
        /// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–∞–π–º–∞—É—Ç–∞
        urlRequest.timeoutInterval = self.timeout
        /// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–∏–ø–∞ –∑–∞–ø—Ä–æ—Å–∞
        urlRequest.httpMethod = APIRequestType.POST.rawValue
        
        /// –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–ª–∞ post –∑–∞–ø—Ä–æ—Å–∞
        if let params = params, let httpBody = try? JSONSerialization.data(withJSONObject: params, options: []) {
            urlRequest.httpBody = httpBody
        }
        
        /// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∑–∞–ø—Ä–æ—Å–∞
        self.headers.forEach { (key, value) in
            urlRequest.addValue(value, forHTTPHeaderField: key)
        }
        
        /// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
        print("üåéüåéüåé POST Request: " + (urlRequest.url?.absoluteString ?? ""))
        print("Headers: ")
        print(urlRequest.allHTTPHeaderFields ?? "–í –∑–∞–ø—Ä–æ—Å–µ –Ω–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤")
        
        /// –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞
        session.dataTask(with: urlRequest) { (data, response, error) in
            if let data = data {
                do {
                    let json = try JSONSerialization.jsonObject(with: data, options: [])
                    /// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
                    print("‚úÖ‚úÖ‚úÖ Response:")
                    print(json)
                    print("‚úÖ‚úÖ‚úÖ")
                    /// –ü–µ—Ä–µ–¥–∞—á–∞ –ø–æ–ª—É—á–µ–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–∞–ª—å—à–µ
                    success(data)
                } catch {
                    /// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏
                    print("üõëüõëüõë Error:" + error.localizedDescription)
                    /// –ü–µ—Ä–µ–¥–∞—á–∞ –ø–æ–ª—É—á–µ–Ω–æ–π –æ—à–∏–±–∫–∏ –¥–∞–ª—å—à–µ
                    failure(error)
                }
            } else if let error = error {
                /// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏
                print("üõëüõëüõë Error:" + error.localizedDescription)
                /// –ü–µ—Ä–µ–¥–∞—á–∞ –ø–æ–ª—É—á–µ–Ω–æ–π –æ—à–∏–±–∫–∏ –¥–∞–ª—å—à–µ
                failure(error)
            }
        }.resume()
    }
}
